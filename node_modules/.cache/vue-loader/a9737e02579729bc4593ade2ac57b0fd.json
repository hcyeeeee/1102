{"remainingRequest":"/Users/peichin/Desktop/1102/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peichin/Desktop/1102/src/components/board.vue?vue&type=template&id=1796d806&scoped=true&","dependencies":[{"path":"/Users/peichin/Desktop/1102/src/components/board.vue","mtime":1667666046837},{"path":"/Users/peichin/Desktop/1102/node_modules/cache-loader/dist/cjs.js","mtime":1665756017000},{"path":"/Users/peichin/Desktop/1102/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1665756021000},{"path":"/Users/peichin/Desktop/1102/node_modules/cache-loader/dist/cjs.js","mtime":1665756017000},{"path":"/Users/peichin/Desktop/1102/node_modules/vue-loader/lib/index.js","mtime":1665756021000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uIiBpZD0iYm9hcmQiPgogICAgICAgIDxoMz7pgbjmg4XlhIDooajmnb88L2gzPgogICAgICAgIDxkaXYgY2xhc3M9ImJvYXJkIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYm94IiB2LWZvcj0iKGl0ZW0sIGluZGV4KSBvZiB0aGlzLnRhaXBlaSIgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3QiPgogICAgICAgICAgICAgICAgICAgIDxQPiDlj7DljJfluII8L1A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPHA+IHt7IGl0ZW0uY2FuZE5hbWUgfX08L3A+CiAgICAgICAgICAgICAgICAgICAgPHA+IHt7IGl0ZW0udGlja2V0IH19PC9wPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0ic2VjdGlvbiI+CiAgICAgICAgPGRpdiBjbGFzcz0ieWVzb3JubyI+CiAgICAgICAgICAgIDxoMj4xOOS/ruaGsumWi+elqOWFrOaKlTwvaDI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InZvdGUiPgogICAgICAgICAgICAgICAgPHA+MTAwLDAwMDwvcD4KICAgICAgICAgICAgICAgIDxwPjExMCwwMDA8L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhYWEiPgogICAgICAgICAgICAgICAgPHA+5ZCM5oSPPC9wPgogICAgICAgICAgICAgICAgPHByb2dyZXNzIGNsYXNzPSJwcm9ncmVzc19jbGFzcyIgbWF4PSIxMDAiIHZhbHVlPSI4MCIgLz4KICAgICAgICAgICAgICAgIDxwPuS4jeWQjOaEjzwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxwPuiou++8mumBlOaomemWgOaqu+eCujk1NOiQrDAwMDAw56WoPC9wPgogICAgICAgICAgICA8YT7kv67mhrLlhazmipXvvLHvvIbvvKE8L2E+CiAgICAgICAgICAgIDxhPuS6kuWLlemBiuaIsjwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9InNlY3Rpb24iPgogICAgICAgIDxkaXYgY2xhc3M9Inllc29ybm8iPgogICAgICAgICAgICA8aDI+57ij5biC6ZW36YG46IiJ6ZaL56WoPC9oMj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iYm94IiB2LWZvcj0iKGl0ZW0sIGluZGV4KSBvZiB0aGlzLnRhaXBlaSIgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3QiPgogICAgICAgICAgICAgICAgICAgIDxQPuWPsOWMl+W4gjwvUD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8cD4ge3sgaXRlbS5jYW5kTmFtZSB9fTwvcD4KICAgICAgICAgICAgICAgICAgICA8cD4ge3sgaXRlbS50aWNrZXQgfX08L3A+CiAgICAgICAgICAgICAgICAgICAgPHByb2dyZXNzIGNsYXNzPSJwcm9ncmVzc19jbGFzcyIgbWF4PSI2NjY2NjY2NiIgdmFsdWU9IjIyMiIgLz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8Yi10YWIgdGl0bGU9IuWMl+mDqCI+CiAgICAgICAgICAgIDxiLXRhYnMgY29udGVudC1jbGFzcz0ibXQtMyIgY2xhc3M9InRhYnNpemUiIGZpbGw+CiAgICAgICAgICAgICAgICA8Yi10YWIgdGl0bGU9IuWfuumahuW4giIgY2xhc3M9InRhYnNpemUiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxheW91dCIgdi1mb3I9IihpdGVtLCBpbmRleCkgb2YgZ2V0UHJvZmlsZTEiIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0X2NhcmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGVyc29uX2ltZyIgOnNyYz0iZ2V0UHJvZmlsZTFbaW5kZXhdLnBob3RvIiBhbHQ9InBlcnNvbmFsIiBsb2FkaW5nPSJsYXp5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhcnR5X2ltZyIgOnNyYz0iZ2V0UHJvZmlsZTFbaW5kZXhdLnBhcnR5X3Bob3RvIiBhbHQ9InBhcnR5IiBsb2FkaW5nPSJsYXp5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gcGVyc29uIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJudW0iPnt7IGl0ZW0ubm8gfX08L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND57eyBpdGVtLm5hbWUgfX08L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gcGFydHkgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0Pnt7IGl0ZW0ucGFydHkgfX08L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gZWR1IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJlZHVfdGl0bGUiPuacgOmrmOWtuOattzwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZWR1X2NvbnRlbnQiIHYtZm9yPSIoaXRlbSwgaW5kZXgpIG9mIGdldFByb2ZpbGUxW2luZGV4XS5leHBlcmllbmNlLmVkdSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBpdGVtIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gZXhwIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJleHBfdGl0bGUiPue2k+attzwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZXhwX2NvbnRlbnQiIHYtZm9yPSIoaXRlbSwgaW5kZXgpIG9mIGdldFByb2ZpbGUxW2luZGV4XS5leHBlcmllbmNlLmV4cCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBpdGVtIH19PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9iLXRhYj4KICAgICAgICAgICAgICAgIDxiLXRhYiB0aXRsZT0i5Y+w5YyX5biCIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsYXlvdXQiIHYtZm9yPSIoaXRlbSwgaW5kZXgpIG9mIGdldFByb2ZpbGUyIiA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxheW91dF9jYXJkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBlcnNvbl9pbWciIDpzcmM9ImdldFByb2ZpbGUyW2luZGV4XS5waG90byIgYWx0PSJwZXJzb25hbCIgbG9hZGluZz0ibGF6eSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYXJ0eV9pbWciIDpzcmM9ImdldFByb2ZpbGUyW2luZGV4XS5wYXJ0eV9waG90byIgYWx0PSJwYXJ0eSIgbG9hZGluZz0ibGF6eSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHBlcnNvbiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0ibnVtIj57eyBpdGVtLm5vIH19PC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+e3sgaXRlbS5uYW1lIH19PC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHBhcnR5IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND57eyBpdGVtLnBhcnR5IH19PC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIGVkdSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZWR1X3RpdGxlIj7mnIDpq5jlrbjmrbc8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImVkdV9jb250ZW50IiB2LWZvcj0iKGl0ZW0sIGluZGV4KSBvZiBnZXRQcm9maWxlMltpbmRleF0uZXhwZXJpZW5jZS5lZHUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgaXRlbSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIGV4cCAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZXhwX3RpdGxlIj7ntpPmrbc8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImV4cF9jb250ZW50IiB2LWZvcj0iKGl0ZW0sIGluZGV4KSBvZiBnZXRQcm9maWxlMltpbmRleF0uZXhwZXJpZW5jZS5leHAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgaXRlbSB9fTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvYi10YWI+CiAgICAgICAgICAgICAgICA8Yi10YWIgdGl0bGU9IuaWsOWMl+W4giI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0IiB2LWZvcj0iKGl0ZW0sIGluZGV4KSBvZiBnZXRQcm9maWxlMyIgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsYXlvdXRfY2FyZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwZXJzb25faW1nIiA6c3JjPSJnZXRQcm9maWxlM1tpbmRleF0ucGhvdG8iIGFsdD0icGVyc29uYWwiIGxvYWRpbmc9ImxhenkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGFydHlfaW1nIiA6c3JjPSJnZXRQcm9maWxlM1tpbmRleF0ucGFydHlfcGhvdG8iIGFsdD0icGFydHkiIGxvYWRpbmc9ImxhenkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBwZXJzb24gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im51bSI+e3sgaXRlbS5ubyB9fTwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0Pnt7IGl0ZW0ubmFtZSB9fTwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBwYXJ0eSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+e3sgaXRlbS5wYXJ0eSB9fTwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBlZHUgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImVkdV90aXRsZSI+5pyA6auY5a245q23PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJlZHVfY29udGVudCIgdi1mb3I9IihpdGVtLCBpbmRleCkgb2YgZ2V0UHJvZmlsZTNbaW5kZXhdLmV4cGVyaWVuY2UuZWR1IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGl0ZW0gfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBleHAgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImV4cF90aXRsZSI+57aT5q23PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJleHBfY29udGVudCIgdi1mb3I9IihpdGVtLCBpbmRleCkgb2YgZ2V0UHJvZmlsZTNbaW5kZXhdLmV4cGVyaWVuY2UuZXhwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGl0ZW0gfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2ItdGFiPgogICAgICAgICAgICAgICAgPGItdGFiIHRpdGxlPSLmoYPlnJLluIIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxheW91dCIgdi1mb3I9IihpdGVtLCBpbmRleCkgb2YgZ2V0UHJvZmlsZTQiIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0X2NhcmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGVyc29uX2ltZyIgOnNyYz0iZ2V0UHJvZmlsZTRbaW5kZXhdLnBob3RvIiBhbHQ9InBlcnNvbmFsIiBsb2FkaW5nPSJsYXp5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhcnR5X2ltZyIgOnNyYz0iZ2V0UHJvZmlsZTRbaW5kZXhdLnBhcnR5X3Bob3RvIiBhbHQ9InBhcnR5IiBsb2FkaW5nPSJsYXp5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gcGVyc29uIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJudW0iPnt7IGl0ZW0ubm8gfX08L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND57eyBpdGVtLm5hbWUgfX08L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gcGFydHkgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0Pnt7IGl0ZW0ucGFydHkgfX08L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gZWR1IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJlZHVfdGl0bGUiPuacgOmrmOWtuOattzwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbWlsIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImVkdV9jb250ZW50IGVsbGlwc2lzMiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSIoaXRlbSwgaW5kZXgpIG9mIGdldFByb2ZpbGU0W2luZGV4XS5leHBlcmllbmNlLmVkdSIgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgaXRlbSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBleHAgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImV4cF90aXRsZSI+57aT5q23PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJleHBfY29udGVudCIgdi1mb3I9IihpdGVtLCBpbmRleCkgb2YgZ2V0UHJvZmlsZTRbaW5kZXhdLmV4cGVyaWVuY2UuZXhwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGl0ZW0gfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2ItdGFiPgogICAgICAgICAgICAgICAgPGItdGFiIHRpdGxlPSLmlrDnq7nnuKMiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxheW91dCIgdi1mb3I9IihpdGVtLCBpbmRleCkgb2YgZ2V0UHJvZmlsZTYiIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0X2NhcmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0icGVyc29uX2ltZyIgOnNyYz0iZ2V0UHJvZmlsZTZbaW5kZXhdLnBob3RvIiBhbHQ9InBlcnNvbmFsIiBsb2FkaW5nPSJsYXp5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhcnR5X2ltZyIgOnNyYz0iZ2V0UHJvZmlsZTZbaW5kZXhdLnBhcnR5X3Bob3RvIiBhbHQ9InBhcnR5IiBsb2FkaW5nPSJsYXp5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gcGVyc29uIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJudW0iPnt7IGl0ZW0ubm8gfX08L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND57eyBpdGVtLm5hbWUgfX08L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gcGFydHkgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0Pnt7IGl0ZW0ucGFydHkgfX08L2g0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gZWR1IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJlZHVfdGl0bGUiPuacgOmrmOWtuOattzwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZWR1X2NvbnRlbnQiIHYtZm9yPSIoaXRlbSwgaW5kZXgpIG9mIGdldFByb2ZpbGU2W2luZGV4XS5leHBlcmllbmNlLmVkdSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBpdGVtIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gZXhwIC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJleHBfdGl0bGUiPue2k+attzwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZXhwX2NvbnRlbnQiIHYtZm9yPSIoaXRlbSwgaW5kZXgpIG9mIGdldFByb2ZpbGU2W2luZGV4XS5leHBlcmllbmNlLmV4cCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBpdGVtIH19PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9iLXRhYj4KICAgICAgICAgICAgICAgIDxiLXRhYiB0aXRsZT0i5paw56u55biCIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsYXlvdXQiIHYtZm9yPSIoaXRlbSwgaW5kZXgpIG9mIGdldFByb2ZpbGU1IiA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxheW91dF9jYXJkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBlcnNvbl9pbWciIDpzcmM9ImdldFByb2ZpbGU1W2luZGV4XS5waG90byIgYWx0PSJwZXJzb25hbCIgbG9hZGluZz0ibGF6eSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJwYXJ0eV9pbWciIDpzcmM9ImdldFByb2ZpbGU1W2luZGV4XS5wYXJ0eV9waG90byIgYWx0PSJwYXJ0eSIgbG9hZGluZz0ibGF6eSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHBlcnNvbiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0ibnVtIj57eyBpdGVtLm5vIH19PC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+e3sgaXRlbS5uYW1lIH19PC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHBhcnR5IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoND57eyBpdGVtLnBhcnR5IH19PC9oND4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIGVkdSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZWR1X3RpdGxlIj7mnIDpq5jlrbjmrbc8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImVkdV9jb250ZW50IiB2LWZvcj0iKGl0ZW0sIGluZGV4KSBvZiBnZXRQcm9maWxlNVtpbmRleF0uZXhwZXJpZW5jZS5lZHUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgaXRlbSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIGV4cCAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZXhwX3RpdGxlIj7ntpPmrbc8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImV4cF9jb250ZW50IiB2LWZvcj0iKGl0ZW0sIGluZGV4KSBvZiBnZXRQcm9maWxlNVtpbmRleF0uZXhwZXJpZW5jZS5leHAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgaXRlbSB9fTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvYi10YWI+CiAgICAgICAgICAgICAgICA8Yi10YWIgdGl0bGU9IuWunOiYree4oyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibGF5b3V0IiB2LWZvcj0iKGl0ZW0sIGluZGV4KSBvZiBnZXRQcm9maWxlIiA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxheW91dF9jYXJkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBlcnNvbl9pbWciIDpzcmM9ImdldFByb2ZpbGVbaW5kZXhdLnBob3RvIiBhbHQ9InBlcnNvbmFsIiBsb2FkaW5nPSJsYXp5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9InBhcnR5X2ltZyIgOnNyYz0iZ2V0UHJvZmlsZVtpbmRleF0ucGFydHlfcGhvdG8iIGFsdD0icGFydHkiIGxvYWRpbmc9ImxhenkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBwZXJzb24gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im51bSI+e3sgaXRlbS5ubyB9fTwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg0Pnt7IGl0ZW0ubmFtZSB9fTwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBwYXJ0eSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDQ+e3sgaXRlbS5wYXJ0eSB9fTwvaDQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSBlZHUgLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImVkdV90aXRsZSI+5pyA6auY5a245q23PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJlZHVfY29udGVudCIgdi1mb3I9IihpdGVtLCBpbmRleCkgb2YgZ2V0UHJvZmlsZVtpbmRleF0uZXhwZXJpZW5jZS5lZHUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgaXRlbSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIGV4cCAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iZXhwX3RpdGxlIj7ntpPmrbc8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImV4cF9jb250ZW50IiB2LWZvcj0iKGl0ZW0sIGluZGV4KSBvZiBnZXRQcm9maWxlW2luZGV4XS5leHBlcmllbmNlLmV4cCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBpdGVtIH19PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9iLXRhYj4KICAgICAgICAgICAgPC9iLXRhYnM+CiAgICAgICAgPC9iLXRhYj4KICAgIDwvZGl2Pgo8L2Rpdj4KCgo="},null]}