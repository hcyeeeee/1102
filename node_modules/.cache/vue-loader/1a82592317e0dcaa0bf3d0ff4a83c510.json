{"remainingRequest":"/Users/peichin/Desktop/1102/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/peichin/Desktop/1102/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/peichin/Desktop/1102/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peichin/Desktop/1102/src/components/board.vue?vue&type=template&id=1796d806&scoped=true&","dependencies":[{"path":"/Users/peichin/Desktop/1102/src/components/board.vue","mtime":1667666046837},{"path":"/Users/peichin/Desktop/1102/node_modules/cache-loader/dist/cjs.js","mtime":1665756017000},{"path":"/Users/peichin/Desktop/1102/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1665756021000},{"path":"/Users/peichin/Desktop/1102/node_modules/cache-loader/dist/cjs.js","mtime":1665756017000},{"path":"/Users/peichin/Desktop/1102/node_modules/vue-loader/lib/index.js","mtime":1665756021000},{"path":"/Users/peichin/Desktop/1102/node_modules/cache-loader/dist/cjs.js","mtime":1665756017000},{"path":"/Users/peichin/Desktop/1102/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1665756021000},{"path":"/Users/peichin/Desktop/1102/node_modules/cache-loader/dist/cjs.js","mtime":1665756017000},{"path":"/Users/peichin/Desktop/1102/node_modules/vue-loader/lib/index.js","mtime":1665756021000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}